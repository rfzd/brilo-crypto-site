user root root;
worker_processes auto;
error_log /dev/stderr;
pid /var/run/nginx.pid;
worker_rlimit_nofile 8192;

daemon off;

events {
    use epoll;
    worker_connections 1024;
    multi_accept on;
}

http {
    include mime.types;
    default_type application/octet-stream;

    map $time_iso8601 $time_iso8601_p1 {
        ~([^+]+) $1;
    }
    map $time_iso8601 $time_iso8601_p2 {
        ~\+([0-9:]+)$ $1;
    }
    map $msec $millisec {
        ~\.([0-9]+)$ $1;
    }

    map $http_x_original_forwarded_for $real_client_ip {
        "" $http_x_forwarded_for;
        default $http_x_original_forwarded_for;
    }

    log_format main escape=json '{'
                                    '"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution
                                    '"connection": "$connection", ' # connection serial number
                                    '"connection_requests": "$connection_requests", ' # number of requests made in connection
                                    '"pid": "$pid", ' # process pid
                                    '"request_id": "$request_id", ' # the unique request id
                                    '"request_length": "$request_length", ' # request length (including headers and body)
                                    '"remote_addr": "$remote_addr", ' # client IP
                                    '"remote_user": "$remote_user", ' # client HTTP username
                                    '"remote_port": "$remote_port", ' # client port
                                    '"time_local": "$time_local", '
                                    '"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format
                                    '"request": "$request", ' # full path no arguments if the request
                                    '"request_uri": "$request_uri", ' # full path and arguments if the request
                                    '"args": "$args", ' # args
                                    '"status": "$status", ' # response status code
                                    '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client
                                    '"bytes_sent": "$bytes_sent", ' # the number of bytes sent to a client
                                    '"http_referer": "$http_referer", ' # HTTP referer
                                    '"http_user_agent": "$http_user_agent", ' # user agent
                                    '"http_x_forwarded_for": "$real_client_ip", ' # http_x_forwarded_for
                                    '"http_host": "$http_host", ' # the request Host: header
                                    '"server_name": "$server_name", ' # the name of the vhost serving the request
                                    '"request_time": "$request_time", ' # request processing time in seconds with msec resolution
                                    '"upstream": "$upstream_addr", ' # upstream backend server for proxied requests
                                    '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS
                                    '"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers
                                    '"upstream_response_time": "$upstream_response_time", ' # time spend receiving upstream body
                                    '"upstream_response_length": "$upstream_response_length", ' # upstream response length
                                    '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable
                                    '"ssl_protocol": "$ssl_protocol", ' # TLS protocol
                                    '"ssl_cipher": "$ssl_cipher", ' # TLS cipher
                                    '"scheme": "$scheme", ' # http or https
                                    '"request_method": "$request_method", ' # request method
                                    '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
                                    '"pipe": "$pipe", ' # "p" if request was pipelined, "." otherwise
                                    '"gzip_ratio": "$gzip_ratio", '
                                    '"http_cf_ray": "$http_cf_ray", '
                                    '"message": "[$request_method]$request_uri", '
                                    '"datetime": "$time_iso8601_p1.$millisec+$time_iso8601_p2"'
                                '}';

    server_tokens off;

    sendfile on;

    keepalive_timeout 120;

    gzip on;
    gzip_types text/plain application/xml application/json application/pdf application/javascript text/css image/svg+xml;

    include /etc/nginx/conf.d/*.conf;
}
